{"version":3,"file":"UserHandler.js","sourceRoot":"","sources":["../../src/handlers/UserHandler.ts"],"names":[],"mappings":";AAAA,+DAA0D;AAQ1D;IAGI;QACI,IAAI,CAAC,eAAe,GAAG,IAAI,2BAAc,EAAE,CAAC;IAChD,CAAC;IAED,4BAAM,GAAN,UAAQ,IAAiB,EAAE,QAA2C;QAClE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAChD,CAAC;IAED,8BAAQ,GAAR,UAAU,QAA2C;QAChD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,4BAAM,GAAN,UAAQ,GAAW,EAAE,IAAiB,EAAE,QAA2C;QAAnF,iBASC;QAPG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,GAAG;YACxC,EAAE,CAAA,CAAC,GAAG,CAAC;gBAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAE3B,IAAI;gBACA,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEzD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4BAAM,GAAN,UAAQ,GAAW,EAAE,QAA0C;QAC3D,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,EAAG,QAAQ,CAAC,CAAC;IAChD,CAAC;IAED,8BAAQ,GAAR,UAAU,GAAW,EAAE,QAAmD;QACtE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;IACL,kBAAC;AAAD,CAAC,AAjCD,IAiCC;AAED,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;AACzB,qBAAe,WAAW,CAAC","sourcesContent":["import UserRepository from \"../repository/UserRepository\";\nimport BaseHandler = require(\"./BaseHandler\");\nimport IUsertModel from \"../models/interfaces/IUserModel\";\nimport UserModel = require(\"../models/UserModel\");\n\ninterface IUserHandler extends BaseHandler<IUsertModel> {\n}\n\nclass UserHandler implements IUserHandler {\n    private _userRepository: UserRepository;\n    \n    constructor () {\n        this._userRepository = new UserRepository();\n    }  \n        \n    create (item: IUsertModel, callback: (error: any, result: any) => void) {\n        this._userRepository.create(item, callback);   \n    }\n   \n    retrieve (callback: (error: any, result: any) => void) {\n         this._userRepository.retrieve(callback);\n    }\n    \n    update (_id: string, item: IUsertModel, callback: (error: any, result: any) => void) {\n        \n        this._userRepository.findById(_id, (err, res) => {\n            if(err) callback(err, res);\n            \n            else \n                this._userRepository.update(_id, item, callback);\n               \n        });    \n    }\n    \n    delete (_id: string, callback:(error: any, result: any) => void) {\n        this._userRepository.delete(_id , callback);\n    }\n    \n    findById (_id: string, callback: (error: any, result: IUsertModel) => void) {\n        this._userRepository.findById(_id, callback);\n    }\n}\n\nObject.seal(UserHandler);\nexport default UserHandler;"]}