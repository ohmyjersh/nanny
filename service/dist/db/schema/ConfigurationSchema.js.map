{"version":3,"file":"ConfigurationSchema.js","sourceRoot":"","sources":["../../../src/db/schema/ConfigurationSchema.ts"],"names":[],"mappings":";;;;;;AACA,2CAAsC;AAEtC;IAAyC,uCAAU;IAAnD;QAAyC,8BAAU;IAgBnD,CAAC;IAfG,oCAAM,GAAN;QACG,IAAI,MAAM,GAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC/B,IAAI,EAAG;gBACH,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,IAAI;aACjB;YACD,cAAc,EAAE;gBACZ,IAAI,EAAE,EAAC,MAAM,EAAC,MAAM,EAAC;gBACrB,QAAQ,EAAE,IAAI;aACjB;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEJ,0BAAC;AAAD,CAAC,AAhBD,CAAyC,uBAAU,GAgBlD;AAhBD,kDAgBC;AAED,IAAI,MAAM,GAAG,IAAI,uBAAU,EAAE,CAAC,WAAW,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,CAAC;;AACjF,qBAAe,MAAM,CAAC","sourcesContent":["import DataAccess = require(\"./../db\");\nimport BaseSchema from \"./BaseSchema\";\n\nexport class ConfigurationSchema extends BaseSchema { \n    schema () {\n       var schema =  this.mongoose.Schema({\n           name : {\n               type: String,\n               required: true\n           },\n           configurations: {\n               type: {String:String},\n               required: true\n           }\n       });\n       \n       return schema;\n   }\n   \n}\n\nvar schema = new BaseSchema().buildSchema(\"configurations\", ConfigurationSchema);\nexport default schema;"]}