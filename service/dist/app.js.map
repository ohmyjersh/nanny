{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":"AAAA,4CAA4C;;AAG5C,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACxC,kEAAqE;AACrE,wDAA2D;AAE3D,kFAAqF;AACrF,0DAA6D;AAC7D;IACI,kBAAoB,GAAoB,EAAU,IAAY;QAA1C,QAAG,GAAH,GAAG,CAAiB;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAC1D,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IACO,sCAAmB,GAA3B,UAA4B,GAAoB;QAC5C,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QAC3B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACpD,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC3B,CAAC;IACO,kCAAe,GAAvB,UAAwB,GAAoB;QACxC,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,CAAC;QAC/C,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;QACrC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QAClC,GAAG,CAAC,GAAG,CAAC,wBAAwB,EAAE,2BAA2B,CAAC,CAAC;IACnE,CAAC;IACM,sBAAG,GAAV;QACI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IACL,eAAC;AAAD,CAAC,AAnBD,IAmBC;AAnBD,4BAmBC","sourcesContent":["///<reference path=\"../typings/index.d.ts\"/>\n\nimport express = require(\"express\");\nvar bodyParser = require(\"body-parser\");\nimport configurationRoutes = require(\"./routes/ConfigurationRoutes\");\nimport manifestRoutes = require(\"./routes/ManifestRoutes\");\nimport userRoutes = require(\"./routes/UserRoutes\");\nimport generateConfigurationRoutes = require(\"./routes/GenerateConfigurationRoutes\");\nimport requestLogger = require(\"./middleware/requestLogger\");\nexport class NannyApi {\n    constructor(private app: express.Express, private port: number) {\n        this.configureMiddleware(app);\n        this.configureRoutes(app);\n    }\n    private configureMiddleware(app: express.Express) {\n        app.use(bodyParser.json());\n        app.use(bodyParser.urlencoded({ extended: false }));\n        app.use(requestLogger);\n    }\n    private configureRoutes(app: express.Express) {\n        app.use(\"/configuration\", configurationRoutes);\n        app.use(\"/manifest\", manifestRoutes);\n        app.use(\"/users\", manifestRoutes);\n        app.use(\"/generateconfiguration\", generateConfigurationRoutes);\n    }\n    public run() {\n        this.app.listen(this.port);\n    }\n}"]}