{"version":3,"file":"GenerateConfigurationRoutes.js","sourceRoot":"","sources":["../../src/routes/GenerateConfigurationRoutes.ts"],"names":[],"mappings":";AAAA,iCAAoC;AACpC,sCAAiC;AACjC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAE9B,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAC,OAAwB,EAAE,QAA0B;IAClE,EAAE,CAAA,CAAC,iBAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,iBAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAA,CAAC;QACrG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAC,kCAAkC,EAAC,CAAC,CAAC;IACjF,CAAC;IAAA,CAAC;IACM,IAAI,CAAC;IAOL,CACA;IAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;IAGZ,CAAC;AACb,CAAC,CAAC,CAAC;AA2BH,iBAAS,MAAM,CAAC","sourcesContent":["import express = require(\"express\");\nimport Util from \"../utils/util\";\nlet router = express.Router();\n\nrouter.post('/', (request: express.Request, response: express.Response) => {\n    if(Util.isNullOrUndefined(request.body.manifest) && Util.isNullOrUndefined(request.body.configurations)){\n        return response.status(404).send({error:\"Manifest or Configuration needed\"});\n    };\n            try {\n                // request.body = {name:\"hi\",configurations:{[\"what\"]:\"thing\"}};\n                // var manifest: IManifestModel = <IManifestModel>request.body;\n                // manifestHandler.create(manifest, (error, result) => {\n                //     if(error) response.send({\"error\": \"error\"});\n                //     else response.send({\"success\": \"success\"});\n                //});\n            }\n            catch (e)  {\n                // console.log(e);\n                // response.send({\"error\": \"error in your request\"});\n            }\n});\n\n\n//ter.post('/manifest', (request: express.Request, response: express.Response) => {\n//     // add options for flatting and reversing the override form manifest <- configuration to \n//     // manifest -> configurations\n//     // split up object.assign to the end of the method and do so as specified by options\n\n//     var requestedManifest = request.body;\n//     let flatten = false; \n//     if(!isNullOrUndefined(requestedManifest.options)){\n//         flatten = requestedManifest.options.flatten; \n//     }\n//     console.log(flatten);\n//     // check if manifest exists and grab data\n//     // if(requestedManifest.manifest) { \n//     //     // query database\n//     //     var result = {};\n//     //     Object.assign(result,requestedManifest);\n//     // }\n//     // Object.assign with manifest object and request manifest\n//     //let configs = await configurationHandler.getConfigurationByManfiest(requestedManifest.configurations, \n//                                                                     //requestedManifest.transforms, \n//                                                                     //flatten);\n//     //response.send(configs);\n// })\n\nexport = router;\n"]}